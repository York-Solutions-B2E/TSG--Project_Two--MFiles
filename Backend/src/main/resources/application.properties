spring.application.name=Backend

# Prevent Docker Compose integration
spring.docker.compose.enabled=false

# Read from .env file
spring.config.import=file:.env[.properties]

# Define the Client-Side Access URL (for CORS Dev-Server Origin)
## The default port for React is 3000
client.url=http://localhost:3000

# Credentials for PostgreSQL access (see .env file for credentials)
spring.datasource.url=${POSTGRES_URL}
spring.jpa.database=POSTGRESQL
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

# Enable DEBUG-mode for Spring Security
logging.level.org.springframework.security=DEBUG

# Custom modifications to enable JPA-PostgreSQL communication
## - `.PostgreSQLDialect` is the most up-to-date dialect (versioning is no longer req'd)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Tell Hibernate to reference 'schema.sql' and 'data.sql' for database creation
# ... and database "seeding"
spring.sql.init.mode=always

# Delay running 'data.sql' until Hibernate has created the schema
spring.jpa.defer-datasource-initialization=true

# Tell Spring's ScriptUtils to use a double semi-colon as a delimiter (for SQL)
## IMPORTANT: Without this, a valid PL/pgSQL statement will not run properly
## NOTE: The SQL in 'data.sql' MUST end with the double semi-colon
spring.sql.init.separator=;;

# Specify control-level that Hibernate has over database/tables (options incl:
# ... none, create-only, drop, create-drop, validate and update)
## none - disables the tool, which will prevent Hibernate from managing the db schema (i.e.,
## ... you must MANUALLY handle the creation, etc.)
## create-only - tells Hibernate to generate the db schema from the entity model
## drop - tells Hibernate to drop the db schema using the entity model as a reference
## create - tells Hibernate to drop the db schema and recreate it afterward using
## ... the entity model as a reference
## create-drop - similar to `create`, however it will also drop the database schema when
## ... the Hibernate session is closed
## validate - tells Hibernate to validate the underlying database schema against the
## ... entity mappings
## update - tells Hibernate to alter the database tables per entity mapping changes
spring.jpa.hibernate.ddl-auto=create-drop

# Show and format the SQL in the CLI
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Custom login credentials for Spring Security
spring.security.user.name=${SSECURITY_USER}
spring.security.user.password=${SSECURITY_PASS}

# Temporarily disable Spring Security
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration